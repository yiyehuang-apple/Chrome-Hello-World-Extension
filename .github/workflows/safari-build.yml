name: Build and Deploy Safari Extension

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Setup project structure
      run: |
        # 确保项目目录结构正确
        ls -la
        echo "检查项目文件..."
        if [ -f "manifest.json" ]; then
          echo "✅ manifest.json 存在"
        else
          echo "⚠️ manifest.json 不存在"
          exit 1
        fi
    
    - name: Convert Chrome Extension to Safari Extension
      run: |
        # 使用苹果的转换工具
        echo "开始转换 Chrome 扩展到 Safari 扩展..."
        xcrun safari-web-extension-converter ${GITHUB_WORKSPACE} --project-location ${GITHUB_WORKSPACE}/safari-extension --copy-resources --no-open --no-prompt
        echo "转换完成！"
    
    - name: Build Safari Extension
      run: |
        # 查找项目目录
        echo "查找 Xcode 项目文件..."
        PROJECT_DIR=$(find ${GITHUB_WORKSPACE}/safari-extension -name "*.xcodeproj" -type d | head -n 1)
        
        if [ -z "$PROJECT_DIR" ]; then
          echo "❌ 找不到 .xcodeproj 文件"
          echo "目录内容:"
          find ${GITHUB_WORKSPACE}/safari-extension -type d
          exit 1
        fi
        
        # 提取项目名称和工作目录
        PROJECT_NAME=$(basename "$PROJECT_DIR" .xcodeproj)
        WORKING_DIR=$(dirname "$PROJECT_DIR")
        
        echo "项目目录: $PROJECT_DIR"
        echo "项目名称: $PROJECT_NAME"
        echo "工作目录: $WORKING_DIR"
        
        # 切换到工作目录
        cd "$WORKING_DIR"
        
        # 列出所有可用的 scheme
        echo "列出所有可用的 scheme:"
        xcodebuild -project "${PROJECT_NAME}.xcodeproj" -list
        
        # 获取第一个可用的 scheme
        SCHEME=$(xcodebuild -project "${PROJECT_NAME}.xcodeproj" -list | grep -A 10 "Schemes:" | grep -v "Schemes:" | grep -v "^$" | head -n 1 | xargs)
        
        if [ -z "$SCHEME" ]; then
          echo "❌ 找不到可用的 scheme"
          exit 1
        fi
        
        echo "使用 scheme: $SCHEME"
        
        # 设置版本号和构建号
        VERSION="1.0.0"
        BUILD_NUMBER=${{ github.run_number }}
        
        # 显示项目结构
        ls -la
        
        # 构建项目
        xcodebuild -project "${PROJECT_NAME}.xcodeproj" -scheme "$SCHEME" -configuration Debug \
          CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO \
          SWIFT_OPTIMIZATION_LEVEL="-Onone" \
          -derivedDataPath build ONLY_ACTIVE_ARCH=NO
        echo "构建完成！"
    
    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: safari-extension
        path: safari-extension/build/Build/Products/Release/*.app
